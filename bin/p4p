#!/bin/sh
# 
# The P4P command script
#
# Environment Variables
#
#   P4P_JAVA_HOME The java implementation to use.  Overrides JAVA_HOME.
#
#   P4P_HEAPSIZE  The maximum amount of heap to use, in MB. 
#                   Default is 1000.
#
#   P4P_OPTS      Extra Java runtime options.
#

# resolve links - $0 may be a softlink
THIS="$0"
while [ -h "$THIS" ]; do
  ls=`ls -ld "$THIS"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '.*/.*' > /dev/null; then
    THIS="$link"
  else
    THIS=`dirname "$THIS"`/"$link"
  fi
done

# if no args specified, show usage
if [ $# = 0 ]; then
  echo "Usage: p4p COMMAND"
  echo "where COMMAND is one of:"
  echo "  bench             run the benchmark"
  echo " or"
  echo "  CLASSNAME         run the class named CLASSNAME"
  echo "Most commands print help when invoked w/o parameters."
  exit 1
fi

# get arguments
COMMAND=$1
shift

# some directories
THIS_DIR=`dirname "$THIS"`
P4P_HOME=`cd "$THIS_DIR/.." ; pwd`

# some Java parameters
if [ "$P4P_JAVA_HOME" != "" ]; then
  echo "run java in $P4P_JAVA_HOME"
  JAVA_HOME=$P4P_JAVA_HOME
fi
  
if [ "$JAVA_HOME" = "" ]; then
  echo "Error: JAVA_HOME is not set."
  exit 1
fi

JAVA=$JAVA_HOME/bin/java
JAVA_HEAP_MAX=-Xmx1000m 

# check envvars which might override default args
if [ "$P4P_HEAPSIZE" != "" ]; then
  echo "run with heapsize $P4P_HEAPSIZE"
  JAVA_HEAP_MAX="-Xmx""$P4P_HEAPSIZE""m"
  echo $JAVA_HEAP_MAX
fi

# CLASSPATH initially contains $P4P_CONF_DIR, or defaults to $P4P_HOME/conf
CLASSPATH=${P4P_CONF_DIR:=$P4P_HOME/conf}

# for developers, add P4P classes to CLASSPATH
if [ -d "$P4P_HOME/build/classes" ]; then
  CLASSPATH=${CLASSPATH}:$P4P_HOME/build/classes
fi
if [ -d "$P4P_HOME/build/plugins" ]; then
  CLASSPATH=${CLASSPATH}:$P4P_HOME/build
fi
if [ -d "$P4P_HOME/build/test/classes" ]; then
  CLASSPATH=${CLASSPATH}:$P4P_HOME/build/test/classes
fi

# so that filenames w/ spaces are handled correctly in loops below
IFS=

# for releases, add P4P jar to CLASSPATH
#for f in $P4P_HOME/p4p-*.jar; do
#  CLASSPATH=${CLASSPATH}:$f;
#done

# add plugins to classpath
if [ -d "$P4P_HOME/plugins" ]; then
  CLASSPATH=${CLASSPATH}:$P4P_HOME
fi

# add libs to CLASSPATH
for f in $P4P_HOME/lib/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

for f in $P4P_HOME/lib/jettyext/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# restore ordinary behaviour
unset IFS

# figure out which class to run
if [ "$COMMAND" = "bench" ] ; then
  CLASS=p4p.bench.UserVector2Bench
else 
    if [ "$COMMAND" = "sim" ] ; then
	CLASS=p4p.sim.P4PSim
    else
	CLASS=$COMMAND
    fi	
fi

# cygwin path translation
if expr match `uname` 'CYGWIN*' > /dev/null; then
  CLASSPATH=`cygpath -p -w "$CLASSPATH"`
fi

# We use native code so need to let java know the lib:
LIB_PATH=$P4P_HOME/lib/ 
P4P_OPTS=-Djava.library.path="$LIB_PATH":"$PATH"

# run it
echo $CLASSPATH
echo "$JAVA" -server $JAVA_HEAP_MAX $P4P_OPTS -classpath "$CLASSPATH" $CLASS "$@"
exec "$JAVA" -server $JAVA_HEAP_MAX $P4P_OPTS -classpath "$CLASSPATH" $CLASS "$@"
# Run the server VM for performance
